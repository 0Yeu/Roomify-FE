{
    "With Redux Example": {
        "description": "WithRedux",
		"scope": "typescriptreact",
        "prefix": "hocWithRedux",
        "body": [
            "import React from 'react';",
            "import { connect } from 'react-redux';",
            "",
            "interface ${1:WithReduxExample}Props {",
            "}",
            "",
            "const ${1/^([A-Z])/${1:/downcase}/} = (",
            "  { data }: {",
            "    data: any,",
            "  }",
            ") => <P extends object>(",
            "  WrappedComponent: React.ComponentType<P>",
            ") => {",
            "  class $1 extends React.Component<P & $1Props, any> {",
            "    render() {",
            "      return <WrappedComponent {...this.props as P} {...this.state} />;",
            "    }",
            "  }",
            "",
            "  const mapStateToProps = (state: any) => {",
            "",
            "  };",
            "",
            "  const mapDispatchToProps = (dispatch: any) => {",
            "  };",
            "",
            "  return connect(",
            "    mapStateToProps,",
            "    mapDispatchToProps",
            "  )($1 as any);",
            "};",
            "export default ${1/^([A-Z])/${1:/downcase}/};",
            ""
        ],
    }
}